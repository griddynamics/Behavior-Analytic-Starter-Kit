#
# Copyright 2013, Grid Dynamics Inc. Deming Project.
# @author Anton Haldin (ahaldin@griddynamics.com)
# @author Denis Khurtin (dkhurtin@griddynamics.com)
#

launch:
    parameters:
        cookbooks_url:
            description: "Cookbooks URL:"
            default: "http://gd-bask.s3.amazonaws.com/cookbooks.tar.gz"
    steps:
        - start_build_server_vm:
            action: provisionVms
            parameters:
                 roleName: build_server
                 jcloudsNodeNamePrefix: build_server
            output:
                 build_server_ips: ips

        - build_server_setup:
            action: chefsolo
            phase: server_setup
            precedingPhases: [ start_build_server_vm ]
            parameters:
                roles: [ build_server ]
                runList: [ "recipe[java::openjdk]", "recipe[maven]", "recipe[git]" ]
                isSolo: true
                recipeUrl: ${cookbooks_url}
                jattrs:
                    java:
                        jdk_version: "7"
                        java_home: "/usr/lib/jvm/java/"

    return:
        build_server_ip:
            description: "Build Server IP:"
            value: "{$.build_server_ips[0]}"


Redeploy_java_artifacts:
    parameters:
        git_repo_url:
            description: "Git repo URL:"
            default: "https://github.com/griddynamics/Behavior-Analytic-Starter-Kit.git"
        repo_localpath:
            description: "Local path to repo"
            default: "/var/local/git_repos/bask"
        repo_branch:
            description: "Git branch:"
            default: "master"
    steps:
        - clone_git_repo:
            action: execrun
            phase: clone_repository
            parameters:
                roles: [ build_server ]
                isSudo: true
                command:
                    - bash -c
                    - |
                        if [ -d ${repo_localpath} ]; then
                            cd ${repo_localpath} || exit -1
                            git fetch --all || exit -2
                        else
                            git clone ${git_repo_url} ${repo_localpath} || exit 1
                            cd ${repo_localpath} || exit 2
                        fi
                        git reset --hard origin/${repo_branch} || exit 3

        - build_maven_projects:
            action: execrun
            phase: build_maven_projects
            precedingPhases: [ clone_repository ]
            parameters:
                roles: [ build_server ]
                isSudo: true
                command:
                    - bash -c
                    - |
                        cd ${repo_localpath}/maven_projects || exit 1
                        mvn clean install || exit 2

        - uploading_webstore_war_to_S3:
            action: .s3manage
            parameters:
                localpath: "${repo_localpath}/maven_projects/web-store/site/target/site.war"
                bucket: "{$.config.properties.s3_bucket_name}"
                action: "upload"


####################
# Hidden workflows #
####################
.s3manage:
    parameters:
        aws_access_key_id:
            description: "aws_access_key_id"
        aws_secret_access_key:
            description: "aws_secret_access_key"
        localpath:
            description: "local file path"
        bucket:
            description: "s3 bucket"
        s3file:
            description: "s3 file name (only for download)"
            default: ""
        action:
            description: "file action"
    steps:
        s3transfer:
            action: chefsolo
            phase: transferring
            parameters:
                roles: [ build_server ]
                runList: [ "recipe[s3manage::default]" ]
                isSolo: true
                recipeUrl: "http://gd-bask.s3.amazonaws.com/cookbooks.tar.gz"
                jattrs:
                    s3manage:
                        access_key_id: ${aws_access_key_id}
                        secret_access_key: ${aws_secret_access_key}
                        localpath: ${localpath}
                        bucket: ${bucket}
                        s3file: ${s3file}
                        action: ${action}


destroy:
    steps:
        - destroy:
            action: undeployEnv
            phase: destroy
